<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>Ошибка оптимистического параллелизма, объект был изменен.</value>
    <comment>Error when optimistic concurrency fails</comment>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>Произошел неизвестный сбой.</value>
    <comment>Default identity result error message</comment>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Электронная почта " {0}" уже занята.</value>
    <comment>Error for duplicate emails</comment>
  </data>
  <data name="DuplicateRoleName" xml:space="preserve">
    <value>Имя роли " {0}" уже занято.</value>
    <comment>Error for duplicate roles</comment>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>Имя пользователя " {0}" уже занято.</value>
    <comment>Error for duplicate user names</comment>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Электронная почта " {0}" недействительна.</value>
    <comment>Invalid email</comment>
  </data>
  <data name="InvalidManagerType" xml:space="preserve">
    <value>Тип {0} должен быть производным от {1}&lt;{2}&gt;.</value>
    <comment>Error when the manager type is not derived correctly</comment>
  </data>
  <data name="InvalidPasswordHasherCompatibilityMode" xml:space="preserve">
    <value>Предоставленный режим совместимости с Хэшером паролей недействителен.</value>
    <comment>Error when the password hasher doesn't understand the format it's being asked to produce.</comment>
  </data>
  <data name="InvalidPasswordHasherIterationCount" xml:space="preserve">
    <value>Число итераций должно быть положительным целым числом.</value>
    <comment>Error when the iteration count is &lt; 1.</comment>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>Имя роли " {0}" недопустимо.</value>
    <comment>Error for invalid role names</comment>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Недопустимый токен.</value>
    <comment>Error when a token is not recognized</comment>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>Имя пользователя "{0} " недопустимо, может содержать только буквы или цифры.</value>
    <comment>User names can only contain letters or digits</comment>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>Пользователь с этим логином уже существует.</value>
    <comment>Error when a login already linked</comment>
  </data>
  <data name="MustCallAddIdentity" xml:space="preserve">
    <value>AddIdentity должен быть вызван в коллекции служб.</value>
    <comment>Error when AddIdentity is not called</comment>
  </data>
  <data name="NoTokenProvider" xml:space="preserve">
    <value>IUserTwoFactorTokenProvider&lt;{0}&gt; с именем '{1}' не зарегистрирован.</value>
    <comment>Error when there is no IUserTwoFactorTokenProvider</comment>
  </data>
  <data name="NullSecurityStamp" xml:space="preserve">
    <value>Штамп безопасности пользователя не может быть нулевым.</value>
    <comment>Error when a user's security stamp is null.</comment>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Неверный пароль.</value>
    <comment>Error when a password doesn't match</comment>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>Пароли должны иметь хотя бы одну цифру ('0'-'9').</value>
    <comment>Error when passwords do not have a digit</comment>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>Пароли должны иметь хотя бы одну строчную букву ("a" -"z").</value>
    <comment>Error when passwords do not have a lowercase letter</comment>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Пароли должны иметь по крайней мере один не буквенно-цифровой символ.</value>
    <comment>Error when password does not have enough non alphanumeric characters</comment>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>Пароли должны иметь хотя бы одну заглавную букву ("A" -"Z").</value>
    <comment>Error when passwords do not have an uppercase letter</comment>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Пароли должны содержать не менее {0} символов.</value>
    <comment>Error message for passwords that are too short</comment>
  </data>
  <data name="RoleNotFound" xml:space="preserve">
    <value>Роль {0} не существует.</value>
    <comment>Error when a role does not exist</comment>
  </data>
  <data name="StoreNotIQueryableRoleStore" xml:space="preserve">
    <value>Store не реализует IQueryableRoleStore&lt;TRole&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIQueryableUserStore" xml:space="preserve">
    <value>Store не реализует IQueryableUserStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIRoleClaimStore" xml:space="preserve">
    <value>Store не реализует IRoleClaimStore&lt;TRole&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserAuthenticationTokenStore" xml:space="preserve">
    <value>Store не реализует IUserAuthenticationTokenStore&lt;User&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserClaimStore" xml:space="preserve">
    <value>Магазин не реализует IUserClaimStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserConfirmationStore" xml:space="preserve">
    <value>Магазин не реализует IUserConfirmationStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserEmailStore" xml:space="preserve">
    <value>Магазин не реализует IUserEmailStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserLockoutStore" xml:space="preserve">
    <value>Store не реализует IUserLockoutStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserLoginStore" xml:space="preserve">
    <value>Магазин не реализует IUserLoginStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserPasswordStore" xml:space="preserve">
    <value>Магазин не реализует IUserPasswordStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserPhoneNumberStore" xml:space="preserve">
    <value>Магазин не реализует IUserPhoneNumberStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserRoleStore" xml:space="preserve">
    <value>Store не реализует IUserRoleStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserSecurityStampStore" xml:space="preserve">
    <value>Store не реализует IUserSecurityStampStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserAuthenticatorKeyStore" xml:space="preserve">
    <value>Store не реализует IUserAuthenticatorKeyStore&lt;User&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserTwoFactorStore" xml:space="preserve">
    <value>Магазин не реализует IUserTwoFactorStore&lt;TUser&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="RecoveryCodeRedemptionFailed" xml:space="preserve">
    <value>Восстановление кода выкупа не удалось.</value>
    <comment>Error when a recovery code is not redeemed.</comment>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>У пользователя уже есть набор паролей.</value>
    <comment>Error when AddPasswordAsync called when a user already has a password</comment>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>Пользователь уже находится в роли '{0}'.</value>
    <comment>Error when a user is already in a role</comment>
  </data>
  <data name="UserLockedOut" xml:space="preserve">
    <value>Пользователь заблокирован.</value>
    <comment>Error when a user is locked out</comment>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>Блокировка для этого пользователя не включена.</value>
    <comment>Error when lockout is not enabled</comment>
  </data>
  <data name="UserNameNotFound" xml:space="preserve">
    <value>Пользователь {0} не существует.</value>
    <comment>Error when a user does not exist</comment>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>Пользователь не находится в роли " {0}".</value>
    <comment>Error when a user is not in the role</comment>
  </data>
  <data name="StoreNotIUserTwoFactorRecoveryCodeStore" xml:space="preserve">
    <value>Store не реализует IUserTwoFactorRecoveryCodeStore&lt;User&gt;.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="PasswordRequiresUniqueChars" xml:space="preserve">
    <value>Пароли должны содержать не менее {0} различных символов.</value>
    <comment>Error message for passwords that are based on similar characters</comment>
  </data>
  <data name="NoRoleType" xml:space="preserve">
    <value>Тип роли не указан, попробуйте AddRoles&lt;TRole&gt;().</value>
    <comment>Error when the IdentityBuilder.RoleType was not specified</comment>
  </data>
  <data name="StoreNotIProtectedUserStore" xml:space="preserve">
    <value>Store не реализует IProtectedUserStore&lt;TUser&gt;, который требуется при ProtectPersonalData = true.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="NoPersonalDataProtector" xml:space="preserve">
    <value>Служба IPersonalDataProtector не была зарегистрирована, это требуется при ProtectPersonalData = true.</value>
    <comment>Error when there is no IPersonalDataProtector</comment>
  </data>
  <data name="DefaultIdentityError" xml:space="preserve">
    <value>Ошибка системы идентификации.</value>
  </data>
</root>